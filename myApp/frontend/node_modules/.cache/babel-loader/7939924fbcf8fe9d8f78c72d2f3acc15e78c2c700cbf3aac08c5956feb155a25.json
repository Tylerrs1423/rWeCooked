{"ast":null,"code":"var _jsxFileName = \"/Users/tylersmith/repos/newCooked/myApp/frontend/src/DarkModeSwitch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DarkModeSwitch({\n  theme,\n  setTheme\n}) {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggleTheme = newTheme => {\n    setTheme(newTheme);\n    setDropdownOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '1rem',\n      right: '1rem',\n      zIndex: 9999\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary dropdown-toggle\",\n        type: \"button\",\n        onClick: () => setDropdownOpen(!dropdownOpen),\n        \"data-bs-toggle\": \"dropdown\",\n        \"aria-expanded\": dropdownOpen,\n        children: [\"Theme: \", theme === 'dark' ? 'Dark' : 'Light']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `dropdown-menu ${dropdownOpen ? 'show' : ''}`,\n        style: {\n          transform: 'translateY(-100%)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            onClick: () => toggleTheme('light'),\n            children: \"Light Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            onClick: () => toggleTheme('dark'),\n            children: \"Dark Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkModeSwitch, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n_c = DarkModeSwitch;\nexport default DarkModeSwitch;\nvar _c;\n$RefreshReg$(_c, \"DarkModeSwitch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DarkModeSwitch","theme","setTheme","_s","dropdownOpen","setDropdownOpen","toggleTheme","newTheme","style","position","bottom","right","zIndex","children","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","transform","_c","$RefreshReg$"],"sources":["/Users/tylersmith/repos/newCooked/myApp/frontend/src/DarkModeSwitch.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction DarkModeSwitch({ theme, setTheme }) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleTheme = (newTheme) => {\n    setTheme(newTheme);\n    setDropdownOpen(false);\n  };\n\n  return (\n    <div style={{ position: 'fixed', bottom: '1rem', right: '1rem', zIndex: 9999 }}>\n      <div className=\"dropup\">\n        <button\n          className=\"btn btn-secondary dropdown-toggle\"\n          type=\"button\"\n          onClick={() => setDropdownOpen(!dropdownOpen)}\n          data-bs-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          Theme: {theme === 'dark' ? 'Dark' : 'Light'}\n        </button>\n\n        <ul className={`dropdown-menu ${dropdownOpen ? 'show' : ''}`} style={{ transform: 'translateY(-100%)' }}>\n          <li>\n            <button className=\"dropdown-item\" onClick={() => toggleTheme('light')}>\n              Light Mode\n            </button>\n          </li>\n          <li>\n            <button className=\"dropdown-item\" onClick={() => toggleTheme('dark')}>\n              Dark Mode\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default DarkModeSwitch;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMS,WAAW,GAAIC,QAAQ,IAAK;IAChCL,QAAQ,CAACK,QAAQ,CAAC;IAClBF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKS,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAK,CAAE;IAAAC,QAAA,eAC7Ed,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBd,OAAA;QACEe,SAAS,EAAC,mCAAmC;QAC7CC,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAAC,CAACD,YAAY,CAAE;QAC9C,kBAAe,UAAU;QACzB,iBAAeA,YAAa;QAAAS,QAAA,GAC7B,SACQ,EAACZ,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAETrB,OAAA;QAAIe,SAAS,EAAE,iBAAiBV,YAAY,GAAG,MAAM,GAAG,EAAE,EAAG;QAACI,KAAK,EAAE;UAAEa,SAAS,EAAE;QAAoB,CAAE;QAAAR,QAAA,gBACtGd,OAAA;UAAAc,QAAA,eACEd,OAAA;YAAQe,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,OAAO,CAAE;YAAAO,QAAA,EAAC;UAEvE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACLrB,OAAA;UAAAc,QAAA,eACEd,OAAA;YAAQe,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,MAAM,CAAE;YAAAO,QAAA,EAAC;UAEtE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CApCQH,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}